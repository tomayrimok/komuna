{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/debt-edge/user-balance-details": {
      "get": {
        "operationId": "DebtEdgeController_getUserBalanceDetails",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtEdgeWithDebtor"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "DebtEdge"
        ]
      }
    },
    "/api/debt-edge/user-balance": {
      "get": {
        "operationId": "DebtEdgeController_getUserBalance",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "DebtEdge"
        ]
      }
    },
    "/api/debt-edge/debt-details": {
      "get": {
        "operationId": "DebtEdgeController_getDebtDetails",
        "parameters": [
          {
            "name": "debtId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtEdge"
                }
              }
            }
          }
        },
        "tags": [
          "DebtEdge"
        ]
      }
    },
    "/api/user/login": {
      "post": {
        "operationId": "UserController_loginOrCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/verify": {
      "post": {
        "operationId": "UserController_verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreatedResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/user": {
      "post": {
        "operationId": "UserController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UserController_getCurrentUserProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/logout": {
      "post": {
        "operationId": "UserController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/expense/apartment-expenses": {
      "get": {
        "operationId": "ExpenseController_getApartmentExpenses",
        "parameters": [
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentExpensesResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Expense"
        ]
      }
    },
    "/api/expense/add-edit-expense": {
      "post": {
        "operationId": "ExpenseController_addEditExpense",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEditExpenseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Expense"
        ]
      }
    },
    "/api/expense/expense-details": {
      "get": {
        "operationId": "ExpenseController_getExpenseDetails",
        "parameters": [
          {
            "name": "expenseId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          }
        },
        "tags": [
          "Expense"
        ]
      }
    },
    "/api/payment/create-payment": {
      "post": {
        "operationId": "PaymentController_createPayment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/apartment": {
      "get": {
        "operationId": "ApartmentController_getApartmentWithResidents",
        "parameters": [
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apartment"
                }
              }
            }
          }
        },
        "tags": [
          "Apartment"
        ]
      },
      "post": {
        "operationId": "ApartmentController_createApartment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApartmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Apartment"
        ]
      }
    },
    "/api/apartment/join/{code}": {
      "post": {
        "operationId": "ApartmentController_joinApartment",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Apartment"
        ]
      }
    },
    "/api/task/create": {
      "post": {
        "operationId": "TaskController_createTask",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/api/task/update": {
      "post": {
        "operationId": "TaskController_updateTaskStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskReqDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/api/task/edit": {
      "post": {
        "operationId": "TaskController_editTask",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTaskReqDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/api/task/get": {
      "get": {
        "operationId": "TaskController_getAllTasks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/api/task/get-completed": {
      "get": {
        "operationId": "TaskController_getCompletedTasks",
        "parameters": [
          {
            "name": "loadMultiplier",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/api/incident": {
      "get": {
        "operationId": "IncidentController_getAllIncidents",
        "parameters": [
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Incident"
        ]
      }
    },
    "/api/incident/details": {
      "get": {
        "operationId": "IncidentController_getIncidentDetails",
        "parameters": [
          {
            "name": "incidentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        },
        "tags": [
          "Incident"
        ]
      }
    },
    "/api/incident/create": {
      "post": {
        "operationId": "IncidentController_createIncident",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncidentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        },
        "tags": [
          "Incident"
        ]
      }
    },
    "/api/incident/update": {
      "post": {
        "operationId": "IncidentController_updateIncident",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIncidentStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Incident"
        ]
      }
    },
    "/api/incident/comment": {
      "post": {
        "operationId": "IncidentController_newComment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        },
        "tags": [
          "Incident"
        ]
      }
    },
    "/api/incident/owner-seen": {
      "post": {
        "operationId": "IncidentController_setOwnerSeen",
        "parameters": [
          {
            "name": "incidentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apartmentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Incident"
        ]
      }
    }
  },
  "info": {
    "title": "Komuna",
    "description": "Komuna API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "komuna",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "SplitType": {
        "type": "string",
        "enum": [
          "EQUAL",
          "NUMBER",
          "PERCENTAGE"
        ]
      },
      "Expense": {
        "type": "object",
        "properties": {
          "expenseId": {
            "type": "string",
            "description": "Unique identifier for the expense"
          },
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment associated with the expense"
          },
          "description": {
            "type": "string",
            "description": "Description of the expense"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the expense"
          },
          "paidById": {
            "type": "string",
            "description": "ID of the user who paid for the expense"
          },
          "splits": {
            "type": "object",
            "description": "Splits of the expense among users",
            "example": {
              "user1": 50,
              "user2": 50
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "splitType": {
            "description": "Type of split for the expense",
            "allOf": [
              {
                "$ref": "#/components/schemas/SplitType"
              }
            ]
          },
          "paidByUser": {
            "description": "User who paid for the expense",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date of the expense"
          }
        },
        "required": [
          "expenseId",
          "apartmentId",
          "description",
          "amount",
          "paidById",
          "splits",
          "splitType",
          "paidByUser",
          "createdAt"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "Unique identifier for the payment"
          },
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment where the payment is made"
          },
          "fromId": {
            "type": "string",
            "description": "ID of the user making the payment"
          },
          "toId": {
            "type": "string",
            "description": "ID of the user receiving the payment"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the payment"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date when the payment was created"
          }
        },
        "required": [
          "paymentId",
          "apartmentId",
          "fromId",
          "toId",
          "amount",
          "createdAt"
        ]
      },
      "IncidentUrgency": {
        "type": "string",
        "enum": [
          "LOW",
          "MEDIUM",
          "HIGH",
          "EXTREME"
        ]
      },
      "IncidentStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "IN_PROGRESS",
          "SOLVED"
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "incidentId": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "commentId",
          "message",
          "userId",
          "createdAt",
          "incidentId",
          "images"
        ]
      },
      "Incident": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "string"
          },
          "apartmentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urgencyLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IncidentUrgency"
              }
            ]
          },
          "reporterId": {
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IncidentStatus"
              }
            ]
          },
          "seenByManager": {
            "type": "boolean"
          },
          "managerResponse": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        },
        "required": [
          "incidentId",
          "apartmentId",
          "title",
          "description",
          "images",
          "urgencyLevel",
          "reporterId",
          "status",
          "seenByManager",
          "managerResponse",
          "updatedAt",
          "createdAt",
          "comments"
        ]
      },
      "ShoppingTemplate": {
        "type": "object",
        "properties": {}
      },
      "ShoppingList": {
        "type": "object",
        "properties": {}
      },
      "Apartment": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "landlordCode": {
            "type": "string",
            "description": "Unique code to join the apartment as a landlord. Can be NULL when the apartment already has a landlord"
          },
          "roommateCode": {
            "type": "string",
            "description": "Unique code to join the apartment as a roommate. NULL in case the apartment doesn't allow new residents"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "landlordUserId": {
            "type": "string",
            "description": "Landlord User ID"
          },
          "landlord": {
            "type": "object",
            "description": "Landlord of the apartment (Relation)"
          },
          "contractEndDate": {
            "format": "date-time",
            "type": "string",
            "description": "Apartment contract end date"
          },
          "rent": {
            "type": "number",
            "description": "Apartment rent"
          },
          "billsDetails": {
            "type": "object",
            "description": "Bills payment details"
          },
          "houseCommitteeRent": {
            "type": "number",
            "description": "Monthly house committee rent"
          },
          "houseCommitteePayerUser": {
            "type": "object",
            "description": "User ID of the house committee payer. NULL if it's split equally"
          },
          "residents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserApartment"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserApartment"
            }
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Expense"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "shoppingTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingTemplate"
            }
          },
          "shoppingLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShoppingList"
            }
          },
          "createdAt": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "apartmentId",
          "name",
          "image",
          "landlordCode",
          "roommateCode",
          "address",
          "city",
          "residents",
          "tasks",
          "expenses",
          "payments",
          "incidents",
          "shoppingTemplates",
          "shoppingLists",
          "createdAt"
        ]
      },
      "UserApartment": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "string",
            "description": "The ID of the apartment where the user resides"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who is a resident in the apartment"
          },
          "rent": {
            "type": "number",
            "description": "The amount of rent the user pays for the apartment"
          },
          "role": {
            "type": "string",
            "description": "The role of the user in the apartment",
            "enum": [
              "LANDLORD",
              "ROOMMATE"
            ]
          },
          "apartment": {
            "description": "The apartment where the user resides",
            "allOf": [
              {
                "$ref": "#/components/schemas/Apartment"
              }
            ]
          },
          "user": {
            "description": "The user who is a resident in the apartment",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "payableByUser": {
            "description": "The user who is responsible for paying rent",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The date when the user-apartment relationship was created"
          }
        },
        "required": [
          "apartmentId",
          "userId",
          "rent",
          "role",
          "apartment",
          "user",
          "payableByUser",
          "createdAt"
        ]
      },
      "DebtEdge": {
        "type": "object",
        "properties": {
          "debtId": {
            "type": "string",
            "description": "Unique identifier for the debt"
          },
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment this debt belongs to"
          },
          "fromId": {
            "type": "string",
            "description": "ID of the user who owes the debt"
          },
          "toId": {
            "type": "string",
            "description": "ID of the user who is owed the debt"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the debt"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update date of the debt"
          },
          "fromUser": {
            "description": "User who owes the debt",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "toUser": {
            "description": "User who is owed the debt",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "debtId",
          "apartmentId",
          "fromId",
          "toId",
          "amount",
          "updatedAt",
          "fromUser",
          "toUser"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "description": "URL to user's profile image"
          },
          "apartments": {
            "description": "User's apartments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserApartment"
            }
          },
          "landlordApartments": {
            "description": "User's apartments as landlord",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Apartment"
            }
          },
          "payableRents": {
            "description": "User's payable rents",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserApartment"
            }
          },
          "expenses": {
            "description": "User's expenses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Expense"
            }
          },
          "debts": {
            "description": "User's debts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DebtEdge"
            }
          },
          "credits": {
            "description": "User's credits",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DebtEdge"
            }
          }
        },
        "required": [
          "userId",
          "firstName",
          "phoneNumber",
          "lastName",
          "apartments",
          "landlordApartments",
          "payableRents",
          "expenses",
          "debts",
          "credits"
        ]
      },
      "DebtEdgeWithDebtor": {
        "type": "object",
        "properties": {
          "debtId": {
            "type": "string",
            "description": "Unique identifier for the debt"
          },
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment this debt belongs to"
          },
          "fromId": {
            "type": "string",
            "description": "ID of the user who owes the debt"
          },
          "toId": {
            "type": "string",
            "description": "ID of the user who is owed the debt"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the debt"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update date of the debt"
          },
          "fromUser": {
            "description": "User who owes the debt",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "toUser": {
            "description": "User who is owed the debt",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "debtor": {
            "type": "string",
            "description": "ID of the user who is considered the debtor in this edge",
            "example": "user123"
          }
        },
        "required": [
          "debtId",
          "apartmentId",
          "fromId",
          "toId",
          "amount",
          "updatedAt",
          "fromUser",
          "toUser",
          "debtor"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number for login"
          }
        },
        "required": [
          "phoneNumber"
        ]
      },
      "VerifyPhoneNumberDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number to verify"
          },
          "code": {
            "type": "string",
            "description": "Verification code sent to the phone number"
          }
        },
        "required": [
          "phoneNumber",
          "code"
        ]
      },
      "UserCreatedResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "isUser": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "isUser"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "phoneNumber",
          "firstName",
          "lastName",
          "image"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "user"
        ]
      },
      "ApartmentExpensesResponse": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment this expense belongs to"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the expense"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the expense"
          },
          "description": {
            "type": "string",
            "description": "Description of the expense"
          },
          "expenseId": {
            "type": "string",
            "description": "ID of the expense"
          },
          "paidById": {
            "type": "string",
            "description": "ID of the user who paid for the expense"
          },
          "paidByUser": {
            "description": "User who paid for the expense",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "splits": {
            "type": "object",
            "description": "Object containing user IDs as keys and their share amounts as values",
            "example": {
              "user1": 50,
              "user2": 50
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "paidByMe": {
            "type": "boolean",
            "description": "Whether the expense was paid by the current user"
          },
          "splitAmount": {
            "type": "string",
            "description": "Amount the current user needs to pay for this expense"
          }
        },
        "required": [
          "apartmentId",
          "amount",
          "createdAt",
          "description",
          "expenseId",
          "paidById",
          "paidByUser",
          "splits"
        ]
      },
      "AddEditExpenseDto": {
        "type": "object",
        "properties": {
          "expenseId": {
            "type": "string",
            "description": "ID of the expense (optional for new expenses)"
          },
          "amount": {
            "type": "number",
            "description": "Amount of the expense",
            "minimum": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the expense"
          },
          "paidById": {
            "type": "string",
            "description": "ID of the user who paid for the expense"
          },
          "apartmentId": {
            "type": "string",
            "description": "ID of the apartment this expense belongs to"
          },
          "splits": {
            "type": "object",
            "description": "Object containing user IDs as keys and their share amounts as values",
            "example": {
              "user1": 50,
              "user2": 50
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "splitType": {
            "description": "Type of split for the expense",
            "allOf": [
              {
                "$ref": "#/components/schemas/SplitType"
              }
            ]
          }
        },
        "required": [
          "amount",
          "description",
          "paidById",
          "apartmentId",
          "splits",
          "splitType"
        ]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "string"
          },
          "fromId": {
            "type": "string"
          },
          "toId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "apartmentId",
          "fromId",
          "toId",
          "amount"
        ]
      },
      "CreateApartmentDto": {
        "type": "object",
        "properties": {}
      },
      "TaskDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateTaskReqDto": {
        "type": "object",
        "properties": {}
      },
      "EditTaskReqDto": {
        "type": "object",
        "properties": {}
      },
      "CreateIncidentDto": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "urgencyLevel": {
            "description": "How urgent the incident is. used by Enum IncidentUrgency",
            "allOf": [
              {
                "$ref": "#/components/schemas/IncidentUrgency"
              }
            ]
          },
          "images": {
            "description": "List of image URLs related to the incident",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "apartmentId",
          "title",
          "description",
          "urgencyLevel"
        ]
      },
      "UpdateIncidentStatusDto": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "string"
          },
          "status": {
            "type": "object"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "incidentId",
          "status",
          "updatedAt"
        ]
      },
      "AddCommentDto": {
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "images": {
            "description": "List of image URLs related to the comment",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "incidentId",
          "message"
        ]
      }
    }
  }
}