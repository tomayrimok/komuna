/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SelectApartmentImport } from './routes/select-apartment'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as MemberIndexImport } from './routes/member/index'
import { Route as OnboardingSelectRoleImport } from './routes/onboarding/select-role'
import { Route as OnboardingInviteImport } from './routes/onboarding/invite'
import { Route as OnboardingCreateProfileImport } from './routes/onboarding/create-profile'
import { Route as OnboardingCreateApartmentImport } from './routes/onboarding/create-apartment'
import { Route as OnboardingLayoutImport } from './routes/onboarding/_layout'
import { Route as MemberTasksImport } from './routes/member/tasks'
import { Route as MemberShoppingImport } from './routes/member/shopping'
import { Route as MemberBalancesImport } from './routes/member/balances'
import { Route as MemberLayoutImport } from './routes/member/_layout'
import { Route as ManagerSettingsImport } from './routes/manager/settings'
import { Route as ManagerIncidentsImport } from './routes/manager/incidents'
import { Route as ManagerApartmentDetailsImport } from './routes/manager/apartment-details'
import { Route as ManagerLayoutImport } from './routes/manager/_layout'
import { Route as MemberIncidentsIndexImport } from './routes/member/incidents/index'
import { Route as MemberIncidentsIncidentIdImport } from './routes/member/incidents/$incidentId'

// Create Virtual Routes

const OnboardingImport = createFileRoute('/onboarding')()
const MemberImport = createFileRoute('/member')()
const ManagerImport = createFileRoute('/manager')()

// Create/Update Routes

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const MemberRoute = MemberImport.update({
  id: '/member',
  path: '/member',
  getParentRoute: () => rootRoute,
} as any)

const ManagerRoute = ManagerImport.update({
  id: '/manager',
  path: '/manager',
  getParentRoute: () => rootRoute,
} as any)

const SelectApartmentRoute = SelectApartmentImport.update({
  id: '/select-apartment',
  path: '/select-apartment',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MemberIndexRoute = MemberIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MemberRoute,
} as any)

const OnboardingSelectRoleRoute = OnboardingSelectRoleImport.update({
  id: '/select-role',
  path: '/select-role',
  getParentRoute: () => OnboardingRoute,
} as any)

const OnboardingInviteRoute = OnboardingInviteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => OnboardingRoute,
} as any)

const OnboardingCreateProfileRoute = OnboardingCreateProfileImport.update({
  id: '/create-profile',
  path: '/create-profile',
  getParentRoute: () => OnboardingRoute,
} as any)

const OnboardingCreateApartmentRoute = OnboardingCreateApartmentImport.update({
  id: '/create-apartment',
  path: '/create-apartment',
  getParentRoute: () => OnboardingRoute,
} as any)

const OnboardingLayoutRoute = OnboardingLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => OnboardingRoute,
} as any)

const MemberTasksRoute = MemberTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => MemberRoute,
} as any)

const MemberShoppingRoute = MemberShoppingImport.update({
  id: '/shopping',
  path: '/shopping',
  getParentRoute: () => MemberRoute,
} as any)

const MemberBalancesRoute = MemberBalancesImport.update({
  id: '/balances',
  path: '/balances',
  getParentRoute: () => MemberRoute,
} as any)

const MemberLayoutRoute = MemberLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => MemberRoute,
} as any)

const ManagerSettingsRoute = ManagerSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ManagerRoute,
} as any)

const ManagerIncidentsRoute = ManagerIncidentsImport.update({
  id: '/incidents',
  path: '/incidents',
  getParentRoute: () => ManagerRoute,
} as any)

const ManagerApartmentDetailsRoute = ManagerApartmentDetailsImport.update({
  id: '/apartment-details',
  path: '/apartment-details',
  getParentRoute: () => ManagerRoute,
} as any)

const ManagerLayoutRoute = ManagerLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ManagerRoute,
} as any)

const MemberIncidentsIndexRoute = MemberIncidentsIndexImport.update({
  id: '/incidents/',
  path: '/incidents/',
  getParentRoute: () => MemberRoute,
} as any)

const MemberIncidentsIncidentIdRoute = MemberIncidentsIncidentIdImport.update({
  id: '/incidents/$incidentId',
  path: '/incidents/$incidentId',
  getParentRoute: () => MemberRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/select-apartment': {
      id: '/select-apartment'
      path: '/select-apartment'
      fullPath: '/select-apartment'
      preLoaderRoute: typeof SelectApartmentImport
      parentRoute: typeof rootRoute
    }
    '/manager': {
      id: '/manager'
      path: '/manager'
      fullPath: '/manager'
      preLoaderRoute: typeof ManagerImport
      parentRoute: typeof rootRoute
    }
    '/manager/_layout': {
      id: '/manager/_layout'
      path: '/manager'
      fullPath: '/manager'
      preLoaderRoute: typeof ManagerLayoutImport
      parentRoute: typeof ManagerRoute
    }
    '/manager/apartment-details': {
      id: '/manager/apartment-details'
      path: '/apartment-details'
      fullPath: '/manager/apartment-details'
      preLoaderRoute: typeof ManagerApartmentDetailsImport
      parentRoute: typeof ManagerImport
    }
    '/manager/incidents': {
      id: '/manager/incidents'
      path: '/incidents'
      fullPath: '/manager/incidents'
      preLoaderRoute: typeof ManagerIncidentsImport
      parentRoute: typeof ManagerImport
    }
    '/manager/settings': {
      id: '/manager/settings'
      path: '/settings'
      fullPath: '/manager/settings'
      preLoaderRoute: typeof ManagerSettingsImport
      parentRoute: typeof ManagerImport
    }
    '/member': {
      id: '/member'
      path: '/member'
      fullPath: '/member'
      preLoaderRoute: typeof MemberImport
      parentRoute: typeof rootRoute
    }
    '/member/_layout': {
      id: '/member/_layout'
      path: '/member'
      fullPath: '/member'
      preLoaderRoute: typeof MemberLayoutImport
      parentRoute: typeof MemberRoute
    }
    '/member/balances': {
      id: '/member/balances'
      path: '/balances'
      fullPath: '/member/balances'
      preLoaderRoute: typeof MemberBalancesImport
      parentRoute: typeof MemberImport
    }
    '/member/shopping': {
      id: '/member/shopping'
      path: '/shopping'
      fullPath: '/member/shopping'
      preLoaderRoute: typeof MemberShoppingImport
      parentRoute: typeof MemberImport
    }
    '/member/tasks': {
      id: '/member/tasks'
      path: '/tasks'
      fullPath: '/member/tasks'
      preLoaderRoute: typeof MemberTasksImport
      parentRoute: typeof MemberImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/_layout': {
      id: '/onboarding/_layout'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingLayoutImport
      parentRoute: typeof OnboardingRoute
    }
    '/onboarding/create-apartment': {
      id: '/onboarding/create-apartment'
      path: '/create-apartment'
      fullPath: '/onboarding/create-apartment'
      preLoaderRoute: typeof OnboardingCreateApartmentImport
      parentRoute: typeof OnboardingImport
    }
    '/onboarding/create-profile': {
      id: '/onboarding/create-profile'
      path: '/create-profile'
      fullPath: '/onboarding/create-profile'
      preLoaderRoute: typeof OnboardingCreateProfileImport
      parentRoute: typeof OnboardingImport
    }
    '/onboarding/invite': {
      id: '/onboarding/invite'
      path: '/invite'
      fullPath: '/onboarding/invite'
      preLoaderRoute: typeof OnboardingInviteImport
      parentRoute: typeof OnboardingImport
    }
    '/onboarding/select-role': {
      id: '/onboarding/select-role'
      path: '/select-role'
      fullPath: '/onboarding/select-role'
      preLoaderRoute: typeof OnboardingSelectRoleImport
      parentRoute: typeof OnboardingImport
    }
    '/member/': {
      id: '/member/'
      path: '/'
      fullPath: '/member/'
      preLoaderRoute: typeof MemberIndexImport
      parentRoute: typeof MemberImport
    }
    '/member/incidents/$incidentId': {
      id: '/member/incidents/$incidentId'
      path: '/incidents/$incidentId'
      fullPath: '/member/incidents/$incidentId'
      preLoaderRoute: typeof MemberIncidentsIncidentIdImport
      parentRoute: typeof MemberImport
    }
    '/member/incidents/': {
      id: '/member/incidents/'
      path: '/incidents'
      fullPath: '/member/incidents'
      preLoaderRoute: typeof MemberIncidentsIndexImport
      parentRoute: typeof MemberImport
    }
  }
}

// Create and export the route tree

interface ManagerRouteChildren {
  ManagerLayoutRoute: typeof ManagerLayoutRoute
  ManagerApartmentDetailsRoute: typeof ManagerApartmentDetailsRoute
  ManagerIncidentsRoute: typeof ManagerIncidentsRoute
  ManagerSettingsRoute: typeof ManagerSettingsRoute
}

const ManagerRouteChildren: ManagerRouteChildren = {
  ManagerLayoutRoute: ManagerLayoutRoute,
  ManagerApartmentDetailsRoute: ManagerApartmentDetailsRoute,
  ManagerIncidentsRoute: ManagerIncidentsRoute,
  ManagerSettingsRoute: ManagerSettingsRoute,
}

const ManagerRouteWithChildren =
  ManagerRoute._addFileChildren(ManagerRouteChildren)

interface MemberRouteChildren {
  MemberLayoutRoute: typeof MemberLayoutRoute
  MemberBalancesRoute: typeof MemberBalancesRoute
  MemberShoppingRoute: typeof MemberShoppingRoute
  MemberTasksRoute: typeof MemberTasksRoute
  MemberIndexRoute: typeof MemberIndexRoute
  MemberIncidentsIncidentIdRoute: typeof MemberIncidentsIncidentIdRoute
  MemberIncidentsIndexRoute: typeof MemberIncidentsIndexRoute
}

const MemberRouteChildren: MemberRouteChildren = {
  MemberLayoutRoute: MemberLayoutRoute,
  MemberBalancesRoute: MemberBalancesRoute,
  MemberShoppingRoute: MemberShoppingRoute,
  MemberTasksRoute: MemberTasksRoute,
  MemberIndexRoute: MemberIndexRoute,
  MemberIncidentsIncidentIdRoute: MemberIncidentsIncidentIdRoute,
  MemberIncidentsIndexRoute: MemberIncidentsIndexRoute,
}

const MemberRouteWithChildren =
  MemberRoute._addFileChildren(MemberRouteChildren)

interface OnboardingRouteChildren {
  OnboardingLayoutRoute: typeof OnboardingLayoutRoute
  OnboardingCreateApartmentRoute: typeof OnboardingCreateApartmentRoute
  OnboardingCreateProfileRoute: typeof OnboardingCreateProfileRoute
  OnboardingInviteRoute: typeof OnboardingInviteRoute
  OnboardingSelectRoleRoute: typeof OnboardingSelectRoleRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingLayoutRoute: OnboardingLayoutRoute,
  OnboardingCreateApartmentRoute: OnboardingCreateApartmentRoute,
  OnboardingCreateProfileRoute: OnboardingCreateProfileRoute,
  OnboardingInviteRoute: OnboardingInviteRoute,
  OnboardingSelectRoleRoute: OnboardingSelectRoleRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-apartment': typeof SelectApartmentRoute
  '/manager': typeof ManagerLayoutRoute
  '/manager/apartment-details': typeof ManagerApartmentDetailsRoute
  '/manager/incidents': typeof ManagerIncidentsRoute
  '/manager/settings': typeof ManagerSettingsRoute
  '/member': typeof MemberLayoutRoute
  '/member/balances': typeof MemberBalancesRoute
  '/member/shopping': typeof MemberShoppingRoute
  '/member/tasks': typeof MemberTasksRoute
  '/onboarding': typeof OnboardingLayoutRoute
  '/onboarding/create-apartment': typeof OnboardingCreateApartmentRoute
  '/onboarding/create-profile': typeof OnboardingCreateProfileRoute
  '/onboarding/invite': typeof OnboardingInviteRoute
  '/onboarding/select-role': typeof OnboardingSelectRoleRoute
  '/member/': typeof MemberIndexRoute
  '/member/incidents/$incidentId': typeof MemberIncidentsIncidentIdRoute
  '/member/incidents': typeof MemberIncidentsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-apartment': typeof SelectApartmentRoute
  '/manager': typeof ManagerLayoutRoute
  '/manager/apartment-details': typeof ManagerApartmentDetailsRoute
  '/manager/incidents': typeof ManagerIncidentsRoute
  '/manager/settings': typeof ManagerSettingsRoute
  '/member': typeof MemberIndexRoute
  '/member/balances': typeof MemberBalancesRoute
  '/member/shopping': typeof MemberShoppingRoute
  '/member/tasks': typeof MemberTasksRoute
  '/onboarding': typeof OnboardingLayoutRoute
  '/onboarding/create-apartment': typeof OnboardingCreateApartmentRoute
  '/onboarding/create-profile': typeof OnboardingCreateProfileRoute
  '/onboarding/invite': typeof OnboardingInviteRoute
  '/onboarding/select-role': typeof OnboardingSelectRoleRoute
  '/member/incidents/$incidentId': typeof MemberIncidentsIncidentIdRoute
  '/member/incidents': typeof MemberIncidentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/select-apartment': typeof SelectApartmentRoute
  '/manager': typeof ManagerRouteWithChildren
  '/manager/_layout': typeof ManagerLayoutRoute
  '/manager/apartment-details': typeof ManagerApartmentDetailsRoute
  '/manager/incidents': typeof ManagerIncidentsRoute
  '/manager/settings': typeof ManagerSettingsRoute
  '/member': typeof MemberRouteWithChildren
  '/member/_layout': typeof MemberLayoutRoute
  '/member/balances': typeof MemberBalancesRoute
  '/member/shopping': typeof MemberShoppingRoute
  '/member/tasks': typeof MemberTasksRoute
  '/onboarding': typeof OnboardingRouteWithChildren
  '/onboarding/_layout': typeof OnboardingLayoutRoute
  '/onboarding/create-apartment': typeof OnboardingCreateApartmentRoute
  '/onboarding/create-profile': typeof OnboardingCreateProfileRoute
  '/onboarding/invite': typeof OnboardingInviteRoute
  '/onboarding/select-role': typeof OnboardingSelectRoleRoute
  '/member/': typeof MemberIndexRoute
  '/member/incidents/$incidentId': typeof MemberIncidentsIncidentIdRoute
  '/member/incidents/': typeof MemberIncidentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/select-apartment'
    | '/manager'
    | '/manager/apartment-details'
    | '/manager/incidents'
    | '/manager/settings'
    | '/member'
    | '/member/balances'
    | '/member/shopping'
    | '/member/tasks'
    | '/onboarding'
    | '/onboarding/create-apartment'
    | '/onboarding/create-profile'
    | '/onboarding/invite'
    | '/onboarding/select-role'
    | '/member/'
    | '/member/incidents/$incidentId'
    | '/member/incidents'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/select-apartment'
    | '/manager'
    | '/manager/apartment-details'
    | '/manager/incidents'
    | '/manager/settings'
    | '/member'
    | '/member/balances'
    | '/member/shopping'
    | '/member/tasks'
    | '/onboarding'
    | '/onboarding/create-apartment'
    | '/onboarding/create-profile'
    | '/onboarding/invite'
    | '/onboarding/select-role'
    | '/member/incidents/$incidentId'
    | '/member/incidents'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/register'
    | '/select-apartment'
    | '/manager'
    | '/manager/_layout'
    | '/manager/apartment-details'
    | '/manager/incidents'
    | '/manager/settings'
    | '/member'
    | '/member/_layout'
    | '/member/balances'
    | '/member/shopping'
    | '/member/tasks'
    | '/onboarding'
    | '/onboarding/_layout'
    | '/onboarding/create-apartment'
    | '/onboarding/create-profile'
    | '/onboarding/invite'
    | '/onboarding/select-role'
    | '/member/'
    | '/member/incidents/$incidentId'
    | '/member/incidents/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  SelectApartmentRoute: typeof SelectApartmentRoute
  ManagerRoute: typeof ManagerRouteWithChildren
  MemberRoute: typeof MemberRouteWithChildren
  OnboardingRoute: typeof OnboardingRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  SelectApartmentRoute: SelectApartmentRoute,
  ManagerRoute: ManagerRouteWithChildren,
  MemberRoute: MemberRouteWithChildren,
  OnboardingRoute: OnboardingRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/register",
        "/select-apartment",
        "/manager",
        "/member",
        "/onboarding"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/select-apartment": {
      "filePath": "select-apartment.tsx"
    },
    "/manager": {
      "filePath": "manager",
      "children": [
        "/manager/_layout",
        "/manager/apartment-details",
        "/manager/incidents",
        "/manager/settings"
      ]
    },
    "/manager/_layout": {
      "filePath": "manager/_layout.tsx",
      "parent": "/manager"
    },
    "/manager/apartment-details": {
      "filePath": "manager/apartment-details.tsx",
      "parent": "/manager"
    },
    "/manager/incidents": {
      "filePath": "manager/incidents.tsx",
      "parent": "/manager"
    },
    "/manager/settings": {
      "filePath": "manager/settings.tsx",
      "parent": "/manager"
    },
    "/member": {
      "filePath": "member",
      "children": [
        "/member/_layout",
        "/member/balances",
        "/member/shopping",
        "/member/tasks",
        "/member/",
        "/member/incidents/$incidentId",
        "/member/incidents/"
      ]
    },
    "/member/_layout": {
      "filePath": "member/_layout.tsx",
      "parent": "/member"
    },
    "/member/balances": {
      "filePath": "member/balances.tsx",
      "parent": "/member"
    },
    "/member/shopping": {
      "filePath": "member/shopping.tsx",
      "parent": "/member"
    },
    "/member/tasks": {
      "filePath": "member/tasks.tsx",
      "parent": "/member"
    },
    "/onboarding": {
      "filePath": "onboarding",
      "children": [
        "/onboarding/_layout",
        "/onboarding/create-apartment",
        "/onboarding/create-profile",
        "/onboarding/invite",
        "/onboarding/select-role"
      ]
    },
    "/onboarding/_layout": {
      "filePath": "onboarding/_layout.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/create-apartment": {
      "filePath": "onboarding/create-apartment.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/create-profile": {
      "filePath": "onboarding/create-profile.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/invite": {
      "filePath": "onboarding/invite.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/select-role": {
      "filePath": "onboarding/select-role.tsx",
      "parent": "/onboarding"
    },
    "/member/": {
      "filePath": "member/index.tsx",
      "parent": "/member"
    },
    "/member/incidents/$incidentId": {
      "filePath": "member/incidents/$incidentId.tsx",
      "parent": "/member"
    },
    "/member/incidents/": {
      "filePath": "member/incidents/index.tsx",
      "parent": "/member"
    }
  }
}
ROUTE_MANIFEST_END */
